{"version":3,"sources":["components/FeedbackForm/FeedbackOptions.js","components/FeedbackForm/Statistics.js","components/FeedbackForm/NoStatistics.js","components/Section/Section.js","components/FeedbackForm/FeedbackForm.js","components/App.js","index.js"],"names":["FeedbackOptions","_ref","onGoodClicks","onNeutralClicks","onBadClicks","react_default","a","createElement","className","type","onClick","Statistics","good","neutral","bad","total","positiveFeedback","Notification","message","Fragment","Section","title","children","FeedbackForm","state","handleGoodClicks","_this","setState","prevState","handleNeutralClicks","handleBadClicks","countTotalFeedback","_this$state","countPositiveFeedbackPercentage","result","percentage","Math","round","this","positivePercentage","components_Section_Section","FeedbackForm_FeedbackOptions","NoStatistics","FeedbackForm_Statistics","Component","App","components_FeedbackForm_FeedbackForm","ReactDOM","render","document","querySelector"],"mappings":"uKAiBeA,EAdS,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,aAAcC,EAAhBF,EAAgBE,gBAAgBC,EAAhCH,EAAgCG,YAAhC,OACpBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,UAAQE,KAAK,SAASD,UAAU,mBAAmBE,QAASR,GAA5D,QACAG,EAAAC,EAAAC,cAAA,UAAQE,KAAK,SAASD,UAAU,mBAAmBE,QAASP,GAA5D,WACAE,EAAAC,EAAAC,cAAA,UAAQE,KAAK,SAASD,UAAU,mBAAmBE,QAASN,GAA5D,SCcOO,EAlBI,SAAAV,GAAA,IAAEW,EAAFX,EAAEW,KAAMC,EAARZ,EAAQY,QAASC,EAAjBb,EAAiBa,IAAMC,EAAvBd,EAAuBc,MAAOC,EAA9Bf,EAA8Be,iBAA9B,OACfX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACCH,EAAAC,EAAAC,cAAA,iBAASK,GAC1BP,EAAAC,EAAAC,cAAA,oBAAYM,GACZR,EAAAC,EAAAC,cAAA,gBAAQO,GACRT,EAAAC,EAAAC,cAAA,kBAAUQ,GACVV,EAAAC,EAAAC,cAAA,8BAAsBS,EAAtB,QCIYC,EAVM,SAAAhB,GAAiB,IAAdiB,EAAcjB,EAAdiB,QACvB,OACCb,EAAAC,EAAAC,cAAAF,EAAAC,EAAAa,SAAA,KACCd,EAAAC,EAAAC,cAAA,SAAIW,KCSQE,EAZC,SAAAnB,GAAyB,IAAtBoB,EAAsBpB,EAAtBoB,MAAOC,EAAerB,EAAfqB,SACzB,OACCjB,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,UAAKc,GACJC,IC6DWC,6MA5DXC,MAAQ,CACJZ,KAAM,EACNC,QAAS,EACTC,IAAK,KAGTW,iBAAmB,WACfC,EAAKC,SAAS,SAACC,GACX,MAAO,CACHhB,KAAMgB,EAAUhB,KAAO,QAKnCiB,oBAAsB,WACjBH,EAAKC,SAAS,SAACC,GACZ,MAAO,CACHf,QAASe,EAAUf,QAAU,QAKzCiB,gBAAkB,WAChBJ,EAAKC,SAAS,SAACC,GACT,MAAO,CACHd,IAAKc,EAAUd,IAAM,QAIjCiB,mBAAqB,WAAM,IAAAC,EACEN,EAAKF,MAEpC,OAH6BQ,EACrBpB,KADqBoB,EACfnB,QADemB,EACNlB,OAKrBmB,gCAAkC,WACpC,IAAMC,EAASR,EAAKK,qBAEdI,EAAqB,IADVT,EAAKF,MAAdZ,KAC0BsB,EAClC,OAAOE,KAAKC,MAAMF,4EAIZ,IAAMpB,EAAQuB,KAAKP,qBACbQ,EAAqBD,KAAKL,kCAChC,OACA5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAACiC,EAAD,CAASnB,MAAO,yBACZhB,EAAAC,EAAAC,cAACkC,EAAD,CAAiBvC,aAAcoC,KAAKb,iBAAkBtB,gBAAiBmC,KAAKT,oBAAqBzB,YAAakC,KAAKR,mBAExG,IAAVf,EAAeV,EAAAC,EAAAC,cAACmC,EAAD,CAAcxB,QAAQ,sBAClCb,EAAAC,EAAAC,cAACiC,EAAD,CAASnB,MAAM,cACXhB,EAAAC,EAAAC,cAACoC,EAAD,CAAY/B,KAAM0B,KAAKd,MAAMZ,KAAMC,QAASyB,KAAKd,MAAMX,QAASC,IAAKwB,KAAKd,MAAMV,IAAKC,MAAOA,EAAOC,iBAAkBuB,aAtDlHK,aCFZ,SAASC,IACtB,OACAxC,EAAAC,EAAAC,cAAA,WACFF,EAAAC,EAAAC,cAACuC,EAAD,OCHAC,IAASC,OAAO3C,EAAAC,EAAAC,cAACsC,EAAD,MAAaI,SAASC,cAAc","file":"static/js/main.dcf82ea9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({onGoodClicks, onNeutralClicks,onBadClicks}) => (\r\n    <div className=\"feedback__controls\">\r\n        <button type=\"button\" className=\"feedback__button\" onClick={onGoodClicks}>Good</button>\r\n        <button type=\"button\" className=\"feedback__button\" onClick={onNeutralClicks}>Neutral</button>\r\n        <button type=\"button\" className=\"feedback__button\" onClick={onBadClicks}>Bad</button>\r\n    </div>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n    onGoodClicks: PropTypes.func.isRequired, \r\n    onNeutralClicks: PropTypes.func.isRequired,\r\n    onBadClicks: PropTypes.func.isRequired,\r\n    }\r\n\r\nexport default FeedbackOptions;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({good, neutral, bad , total, positiveFeedback}) => (\r\n    <div className=\"statistics\">\r\n                    <p>Good:{good}</p>\r\n\t\t\t<p>Neutral:{neutral}</p>\r\n\t\t\t<p>Bad:{bad}</p>\r\n\t\t\t<p>Total:{total}</p>\r\n\t\t\t<p>Positive feedback:{positiveFeedback} %</p> \r\n                </div>\r\n);\r\n\r\nStatistics.propTypes = {\r\n\tgood: PropTypes.number.isRequired,\r\n\tneutral: PropTypes.number.isRequired,\r\n\tbad: PropTypes.number.isRequired,\r\n\ttotal: PropTypes.number.isRequired,\r\n\tpositivePercentage: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<p>{message}</p>\r\n\t\t</>\r\n\t);\r\n};\r\nNotification.propTypes = {\r\n\tmessage: PropTypes.string.isRequired\r\n};\r\nexport default Notification;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>{title}</h2>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nSection.propTypes = {\r\n\ttitle: PropTypes.string.isRequired\r\n};\r\nexport default Section;","import React, {Component} from \"react\";\r\nimport FeedbackOptions from \"./FeedbackOptions\";\r\nimport Statistics from \"./Statistics\";\r\nimport NoStatistics from './NoStatistics';\r\nimport Section from \"../Section/Section\";\r\n\r\nclass FeedbackForm extends Component{\r\n\r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0\r\n    };\r\n    \r\n    handleGoodClicks = () => {\r\n        this.setState((prevState) => {\r\n            return {\r\n                good: prevState.good + 1,\r\n}\r\n        })\r\n    }\r\n    \r\n    handleNeutralClicks = () => {\r\n         this.setState((prevState) => {\r\n            return {\r\n                neutral: prevState.neutral + 1,\r\n}\r\n        })\r\n    }\r\n\r\n    handleBadClicks = () => {\r\n      this.setState((prevState) => {\r\n            return {\r\n                bad: prevState.bad + 1,\r\n}\r\n        })\r\n    }\r\n    countTotalFeedback = () => {\r\n\t\tconst { good, neutral, bad } = this.state;\r\n\t\tconst result = good + neutral + bad;\r\n\t\treturn result;\r\n\t};\r\n\r\n    countPositiveFeedbackPercentage = () => {\r\n\t\tconst result = this.countTotalFeedback();\r\n\t\tconst { good } = this.state;\r\n\t\tconst percentage = (good * 100) / result;\r\n\t\treturn Math.round(percentage);\r\n    };\r\n    \r\n    render() {\r\n        const total = this.countTotalFeedback();\r\n        const positivePercentage = this.countPositiveFeedbackPercentage();\r\n        return (\r\n        <div className=\"feedback\">\r\n            <Section title =\"Please leave feedback\">\r\n                <FeedbackOptions onGoodClicks={this.handleGoodClicks} onNeutralClicks={this.handleNeutralClicks} onBadClicks={this.handleBadClicks}></FeedbackOptions>\r\n                </Section>\r\n                {total === 0 ? (<NoStatistics message=\"No feedback given\"/>) : (\r\n                    <Section title=\"Statistics\">\r\n                        <Statistics good={this.state.good} neutral={this.state.neutral} bad={this.state.bad} total={total} positiveFeedback={positivePercentage}></Statistics>\r\n                    </Section>)\r\n                }\r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default FeedbackForm;","\nimport React from \"react\";\nimport FeedbackForm from './FeedbackForm/FeedbackForm'\n\nexport default function App() {\n  return (\n  <div>\n<FeedbackForm></FeedbackForm>\n  </div>\n  );\n}","import React from 'react';\nimport  ReactDOM  from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App></App>, document.querySelector('#root'));\n"],"sourceRoot":""}