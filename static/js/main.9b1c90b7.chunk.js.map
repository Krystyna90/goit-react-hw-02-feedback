{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/NoStatistics/NoStatistics.js","components/Section/Section.js","components/App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["FeedbackOptions","_ref","options","onLeaveFeedback","react_default","a","createElement","Fragment","map","option","className","css","Feedback_btn","key","nanoid","type","name","onClick","Statistics","good","neutral","bad","total","positiveFeedback","Notification","message","Section","title","children","App","state","countTotalFeedback","_this$state","_this","countPositiveFeedbackPercentage","result","percentage","Math","round","e","target","setState","prevState","Object","defineProperty","this","positivePercentage","keys","components_Section_Section","components_FeedbackOptions_FeedbackOptions","NoStatistics","components_Statistics_Statistics","Component","ReactDOM","render","StrictMode","components_App","document","querySelector","module","exports"],"mappings":"0OA2BeA,EAtBS,SAAAC,GAAkC,IAA/BC,EAA+BD,EAA/BC,QAASC,EAAsBF,EAAtBE,gBAClC,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACGL,EAAQM,IAAI,SAACC,GAAD,OACXL,EAAAC,EAAAC,cAAA,UACEI,UAAWC,IAAIC,aACfC,IAAKC,cACLC,KAAK,SACLC,KAAMP,EACNQ,QAASd,GAERM,OCKIS,EAlBI,SAAAjB,GAAA,IAAGkB,EAAHlB,EAAGkB,KAAMC,EAATnB,EAASmB,QAASC,EAAlBpB,EAAkBoB,IAAKC,EAAvBrB,EAAuBqB,MAAOC,EAA9BtB,EAA8BsB,iBAA9B,OACjBnB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACbN,EAAAC,EAAAC,cAAA,iBAASa,GACTf,EAAAC,EAAAC,cAAA,oBAAYc,GACZhB,EAAAC,EAAAC,cAAA,gBAAQe,GACRjB,EAAAC,EAAAC,cAAA,kBAAUgB,GACVlB,EAAAC,EAAAC,cAAA,8BAAsBiB,EAAtB,QCIWC,EAVM,SAAAvB,GAAiB,IAAdwB,EAAcxB,EAAdwB,QACtB,OACErB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,SAAImB,KCUKC,EAbC,SAAAzB,GAAyB,IAAtB0B,EAAsB1B,EAAtB0B,MAAOC,EAAe3B,EAAf2B,SACxB,OACExB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKqB,GACJC,ICwDQC,6MAxDbC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,KAGPU,mBAAqB,WAAM,IAAAC,EACMC,EAAKH,MAEpC,OAHyBE,EACjBb,KADiBa,EACXZ,QADWY,EACFX,OAKzBa,gCAAkC,WAChC,IAAMC,EAASF,EAAKF,qBAEdK,EAAqB,IADVH,EAAKH,MAAdX,KAC0BgB,EAClC,OAAOE,KAAKC,MAAMF,MAGpBjC,gBAAkB,SAACoC,GACjB,IAAMvB,EAAOuB,EAAEC,OAAOxB,KACtBiB,EAAKQ,SAAS,SAACC,GAAD,OAAAC,OAAAC,EAAA,EAAAD,CAAA,GACX3B,EAAO0B,EAAU1B,GAAQ,8EAK5B,IAAMM,EAAQuB,KAAKd,qBACbe,EAAqBD,KAAKX,kCAC1BhC,EAAUyC,OAAOI,KAAKF,KAAKf,OACjC,OACE1B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAAC0C,EAAD,CAASrB,MAAM,yBACbvB,EAAAC,EAAAC,cAAC2C,EAAD,CACE/C,QAASA,EACTC,gBAAiB0C,KAAK1C,mBAGf,IAAVmB,EACClB,EAAAC,EAAAC,cAAC4C,EAAD,CAAczB,QAAQ,sBAEtBrB,EAAAC,EAAAC,cAAC0C,EAAD,CAASrB,MAAM,cACbvB,EAAAC,EAAAC,cAAC6C,EAAD,CACEhC,KAAM0B,KAAKf,MAAMX,KACjBC,QAASyB,KAAKf,MAAMV,QACpBC,IAAKwB,KAAKf,MAAMT,IAChBC,MAAOA,EACPC,iBAAkBuB,aAhDdM,aCFlBC,IAASC,OAAOlD,EAAAC,EAAAC,cAACF,EAAAC,EAAMkD,WAAP,KAAkBnD,EAAAC,EAAAC,cAACkD,EAAD,OAAgCC,SAASC,cAAc,6BCHzFC,EAAAC,QAAA,CAAkBhD,aAAA","file":"static/js/main.9b1c90b7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\nimport PropTypes from \"prop-types\";\r\nimport css from \"./FeedbackOptions.module.css\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <>\r\n      {options.map((option) => (\r\n        <button\r\n          className={css.Feedback_btn}\r\n          key={nanoid()}\r\n          type=\"button\"\r\n          name={option}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string),\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positiveFeedback }) => (\r\n  <div className=\"statistics\">\r\n    <p>Good:{good}</p>\r\n    <p>Neutral:{neutral}</p>\r\n    <p>Bad:{bad}</p>\r\n    <p>Total:{total}</p>\r\n    <p>Positive feedback:{positiveFeedback} %</p>\r\n  </div>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <>\r\n      <p>{message}</p>\r\n    </>\r\n  );\r\n};\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\nexport default Section;\r\n","import React, { Component } from \"react\";\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"./Statistics/Statistics\";\nimport NoStatistics from \"./NoStatistics/NoStatistics\";\nimport Section from \"./Section/Section\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const result = good + neutral + bad;\n    return result;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const result = this.countTotalFeedback();\n    const { good } = this.state;\n    const percentage = (good * 100) / result;\n    return Math.round(percentage);\n  };\n\n  onLeaveFeedback = (e) => {\n    const name = e.target.name;\n    this.setState((prevState) => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  render() {\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    const options = Object.keys(this.state);\n    return (\n      <div className=\"feedback\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={this.onLeaveFeedback}\n          ></FeedbackOptions>\n        </Section>\n        {total === 0 ? (\n          <NoStatistics message=\"No feedback given\" />\n        ) : (\n          <Section title=\"Statistics\">\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={total}\n              positiveFeedback={positivePercentage}\n            ></Statistics>\n          </Section>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport  ReactDOM  from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<React.StrictMode><App></App></React.StrictMode>, document.querySelector('#root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Feedback_btn\":\"FeedbackOptions_Feedback_btn__3eHW3\"};"],"sourceRoot":""}