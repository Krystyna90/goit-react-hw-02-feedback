{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/NoStatistics/NoStatistics.js","components/Section/Section.js","components/App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["FeedbackOptions","_ref","options","onLeaveFeedback","react_default","a","createElement","Fragment","map","option","className","css","Feedback_btn","key","nanoid","type","name","onClick","Statistics","good","neutral","bad","total","positiveFeedback","Notification","message","Section","title","children","App","state","handleGoodClicks","_this","setState","prevState","handleNeutralClicks","handleBadClicks","countTotalFeedback","_this$state","countPositiveFeedbackPercentage","result","percentage","Math","round","e","target","Object","defineProperty","this","positivePercentage","keys","components_Section_Section","components_FeedbackOptions_FeedbackOptions","NoStatistics","components_Statistics_Statistics","Component","ReactDOM","render","StrictMode","components_App","document","querySelector","module","exports"],"mappings":"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","file":"static/js/main.f143b20e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { nanoid } from 'nanoid';\r\nimport PropTypes from 'prop-types';\r\nimport css from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{options.map((option) => (\r\n                <button className={css.Feedback_btn } key={nanoid()} type=\"button\" name={option} onClick={onLeaveFeedback}>\r\n\t\t\t\t\t{option}\r\n\t\t\t\t</button>\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n};\r\nFeedbackOptions.propTypes = {\r\n\toptions: PropTypes.array.isRequired,\r\n\tonLeaveFeedback: PropTypes.func.isRequired\r\n};\r\n\r\nexport default FeedbackOptions;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({good, neutral, bad , total, positiveFeedback}) => (\r\n    <div className=\"statistics\">\r\n                    <p>Good:{good}</p>\r\n\t\t\t<p>Neutral:{neutral}</p>\r\n\t\t\t<p>Bad:{bad}</p>\r\n\t\t\t<p>Total:{total}</p>\r\n\t\t\t<p>Positive feedback:{positiveFeedback} %</p> \r\n                </div>\r\n);\r\n\r\nStatistics.propTypes = {\r\n\tgood: PropTypes.number.isRequired,\r\n\tneutral: PropTypes.number.isRequired,\r\n\tbad: PropTypes.number.isRequired,\r\n\ttotal: PropTypes.number.isRequired,\r\n\tpositivePercentage: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<p>{message}</p>\r\n\t\t</>\r\n\t);\r\n};\r\nNotification.propTypes = {\r\n\tmessage: PropTypes.string.isRequired\r\n};\r\nexport default Notification;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>{title}</h2>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nSection.propTypes = {\r\n\ttitle: PropTypes.string.isRequired,\r\n\tchildren: PropTypes.element.isRequired\r\n};\r\nexport default Section;","import React, {Component} from \"react\";\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"./Statistics/Statistics\";\nimport NoStatistics from './NoStatistics/NoStatistics';\nimport Section from \"./Section/Section\";\n\nclass App extends Component{\n\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0\n    };\n    \n    handleGoodClicks = () => {\n        this.setState((prevState) => {\n            return {\n                good: prevState.good + 1,\n}\n        })\n    }\n    \n    handleNeutralClicks = () => {\n         this.setState((prevState) => {\n            return {\n                neutral: prevState.neutral + 1,\n}\n        })\n    }\n\n    handleBadClicks = () => {\n      this.setState((prevState) => {\n            return {\n                bad: prevState.bad + 1,\n}\n        })\n    }\n    countTotalFeedback = () => {\n\t\tconst { good, neutral, bad } = this.state;\n\t\tconst result = good + neutral + bad;\n\t\treturn result;\n\t};\n\n    countPositiveFeedbackPercentage = () => {\n\t\tconst result = this.countTotalFeedback();\n\t\tconst { good } = this.state;\n\t\tconst percentage = (good * 100) / result;\n\t\treturn Math.round(percentage);\n    };\n  \n  onLeaveFeedback = (e) => {\n\t\tconst name = e.target.name;\n\t\tthis.setState((prevState) => ({\n\t\t\t[name]: prevState[name] + 1\n\t\t}));\n\t};  \n  \n    render() {\n        const total = this.countTotalFeedback();\n      const positivePercentage = this.countPositiveFeedbackPercentage();\n      const options = Object.keys(this.state);\n        return (\n        <div className=\"feedback\">\n            <Section title =\"Please leave feedback\">\n                <FeedbackOptions options={options} onLeaveFeedback={this.onLeaveFeedback}></FeedbackOptions>\n                </Section>\n                {total === 0 ? (<NoStatistics message=\"No feedback given\"/>) : (\n                    <Section title=\"Statistics\">\n                        <Statistics good={this.state.good} neutral={this.state.neutral} bad={this.state.bad} total={total} positiveFeedback={positivePercentage}></Statistics>\n                    </Section>)\n                }\n        </div>\n    )\n    }\n}\n\nexport default App;","import React from 'react';\nimport  ReactDOM  from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<React.StrictMode><App></App></React.StrictMode>, document.querySelector('#root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Feedback_btn\":\"FeedbackOptions_Feedback_btn__3eHW3\"};"],"sourceRoot":""}